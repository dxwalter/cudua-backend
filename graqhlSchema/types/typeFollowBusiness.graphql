    # This is the businesses followed by a customer 
    
    # Business details of the bookmark
    type BusinessDetails {
        # business id
        businessId: ID!
        # the username of the business
        username: String!
        # the business name
        businessName: String!
        # an array of the business category.
        businessCategory: [BusinessCategory]
        # logo of the business. eg. Tammy.jpg
        logo: String
        # business review score
        review: Int!
    }

    # business category
    type BusinessCategory {
        # category id
        categoryId: String!
        # category name
        categoryName: String!
    }

    # create bookmark
    input followBusinessInput {
        # the business id of the business to be followed
        businessId: String!
    }


    # the response gotten when a bookmark is created
    type followBusinessResponse  implements responseType{
        code: Int!
        success: Boolean!
        message: String!
    }

    # response type
    interface responseType {
        code: Int!
        success: Boolean!
        message: String!
    }

    # this is the response you get when you retrieve bookmarks
    type getFollowResponse implements responseType {
        # an array of bookmarks from a user
        following: [BusinessDetails]
        code: Int!
        success: Boolean!
        message: String!
    }

    # this is the person that followed a business
    type Follower{
        # name of the user
        name: String,
        # profile photo of the user
        profilePhoto: String,
        # This is the customer review score
        reviewScore: Int!
    }

    # this is the list og people that followed a business
    type getFollowersResponse {
        # an array of bookmarkers
        customerData: [Follower],
        code: Int!
        success: Boolean!
        message: String!
    }

    input getFollowingInput {
        page: Int!
    }

    input getFollowersBusinessInput {
        page: Int!
        businessId: String!
    }

    type Query {
        # get following. Only a signed in user can get this data
        Getfollowing(input: getFollowingInput): getFollowResponse
        # a business can get all the people that followed a business
        GetFollowers(input: getFollowersBusinessInput): getFollowersResponse  
    }

    type Mutation {
        # bookmark a business
        FollowBusiness(input: followBusinessInput): followBusinessResponse
        # remove business from bookmarks
        UnfollowBusiness (input: followBusinessInput): followBusinessResponse
    }