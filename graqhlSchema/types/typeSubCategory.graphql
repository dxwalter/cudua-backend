    # response type
    interface ResponseType {
        # Response status code
        code: Int!
        # This boolean value is used to check if an operation ran successfully
        success: Boolean!
        # This is the message sent by the server about an operation
        message: String!
    }


    # This is the response type that returns no data
    type DatalessResponse implements ResponseType {
        # Response status code
        code: Int!
        # This boolean value is used to check if an operation ran successfully
        success: Boolean!
        # This is the message sent by the server about an operation
        message: String!
    }

    type Subcategory {
        # this is the subcategory id
        subcategoryId: String!
        # the name of the subcategory
        subcategoryName: String!
    }

    input CreateSubcategoryInput {
        # this will be an array of ids of different subcategory that belongs to a category
        subcategories: String!
        # the category id of the subcategory to be created
        categoryId: String!
    }

    input ConfirmSubcategoryInput {
        # This is the id of the subcategory
        subcategoryId: String!
    }

    input adminEditSubcategoryInput {
        subcategoryId: String!
        subcategoryName: String!
    }


    type CreateSubcategoryResponse implements ResponseType {
        # this is the subcategory id
        subcategoryId: String!
        # the name of the subcategory
        subcategoryName: String!
        # Response status code
        code: Int!
        # This boolean value is used to check if an operation ran successfully
        success: Boolean!
        # This is the message sent by the server about an operation
        message: String!
    }

    #This is the mutation type that will handle create account, forgot and recover pasword
    type Mutation {
        # create a subcategory
        createSubCategory(input: CreateSubcategoryInput): DatalessResponse
        # create a subcategory
        AdminCreateSubcategory(input: CreateSubcategoryInput): DatalessResponse
        # edit a subcategory
        AdminEditSubcategory(input: adminEditSubcategoryInput): DatalessResponse
        # activate a new subcategory
        ActivateSubcategory(input: ConfirmSubcategoryInput): DatalessResponse
    }