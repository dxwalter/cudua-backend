
type Order {
    customerName: String!
    customerId: String!
    profilePicture: String
    orderTime: DateTime!
    orderId: String!
}

input deleteItemInOrder {
    orderId: String!
    productId: String!    
}

input businessGetOrder {
    businessId: String!
}

type OrderStatus {
    newOrder: [Order]
    pendingOrder: [Order]
    clearedOrder: [Order]
}

type OrdersResponse implements ResponseType {
    orders: OrderStatus
    code: Int!
    success: Boolean!
    message: String!
}

type orderCountResponse implements ResponseType {
    count: Int!
    code: Int!
    success: Boolean!
    message: String!
}

type orderCustomer {
    fullname: String!
    customerId: String!
    phoneNumber: String
    email: String!
    ratingScore: Float!
    address: AddressType
    profilePicture: String
    reviews: [CustomerReview]
}

type CustomerReview {
    rating: Int!
    description: String
    businessId: String!
    customerId: String
    author: String!
    logo: String
    timeStamp: DateTime!
}

type orderProduct {
    name: String!
    productId: String!
    image: String!
    quantity: Int!
    price: Int!
    size: String
    color: String
    businessId: String!
}

type orderInfo {
    deliveryCharge: Int!
    orderStatus: Int!
    deliveryStatus: Int!
    deliveryTime: String
    orderTime: DateTime
}

type productsInOrderResponse implements ResponseType {
    orderDetails: [orderProduct]
    orderInfo: orderInfo
    customerDetails: orderCustomer
    code: Int!
    success: Boolean!
    message: String!
}


input orderInput {
    businessId: String!
    customerId: String!
    orderId: String!
}

input confirmOrderInput {
    businessId: String!
    customerId: String!
    orderId: String!
    deliveryCharge: Int
}

input rejectOrder {
    businessId: String!
    customerId: String!
    orderId: String!
    reason: String!
}

type productsInOrderResponseWithBusinessData {
    orderDetails: [orderProduct]!
    businessName: String!
    username: String!
    businessId: String!
    logo: String
}

type orderDetailsResponse {
    orderDetails: [productsInOrderResponseWithBusinessData]
    code: Int!
    success: Boolean!
    message: String!
}

# A customer 
input rejectDelivery {
    businessId: String!
    orderId: String!
}

# create order response

type createOrderResponse implements ResponseType {
    orderId: String
    code: Int!
    success: Boolean!
    message: String!
}

input customerOrderDetailsInput {
    orderId: String!
}

type Query {
    BusinessGetOrders(input: businessGetOrder): OrdersResponse
    BusinessGetProductsInOrder(input: orderInput): productsInOrderResponse

    GetNewOrderCount(input: businessGetOrder): orderCountResponse

    GetOrderItemsForCustomer(input: customerOrderDetailsInput): orderDetailsResponse
}

type Mutation {
    CreateOrder: createOrderResponse
    CustomerDeleteProductInOrder (input: deleteItemInOrder): DatalessResponse
    ConfirmOrder(input: confirmOrderInput): DatalessResponse
    RejectOrder(input: rejectOrder): DatalessResponse
    UpdateDeliveryCharge(input: confirmOrderInput): DatalessResponse
    RejectOrderDelivery(input: rejectDelivery): DatalessResponse
}